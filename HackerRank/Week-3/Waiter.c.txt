#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int isPrime(int num) {
    if (num < 2) return 0;
    for (int i = 2; i <= sqrt(num); i++) {
        if (num % i == 0) return 0;
    }
    return 1;
}

int getPrime(int index) {
    int count = 0, num = 2;
    while (1) {
        if (isPrime(num)) {
            count++;
            if (count == index) return num;
        }
        num++;
    }
}

int main() {
    int n, q;
    scanf("%d %d", &n, &q);

    int *A = (int*)malloc(n * sizeof(int));
    for (int i = 0; i < n; i++) scanf("%d", &A[i]);

    for (int i = 1; i <= q; i++) {
        int prime = getPrime(i);

        int *nextA = (int*)malloc(n * sizeof(int));
        int topNextA = 0;

        int *B = (int*)malloc(n * sizeof(int));
        int topB = 0;

        for (int j = n - 1; j >= 0; j--) {
            if (A[j] % prime == 0) {
                B[topB++] = A[j];
            } else {
                nextA[topNextA++] = A[j];
            }
        }

        for (int j = topB - 1; j >= 0; j--) {
            printf("%d\n", B[j]);
        }

        free(A);
        A = (int*)malloc(topNextA * sizeof(int));
        for (int j = 0; j < topNextA; j++) {
            A[j] = nextA[j];
        }
        n = topNextA;

        free(nextA);
        free(B);
    }

    for (int j = n - 1; j >= 0; j--) {
        printf("%d\n", A[j]);
    }

    free(A);
    return 0;
}
