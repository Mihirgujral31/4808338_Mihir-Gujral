#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_LEN 1000000
#define MAX_OPS 100000

typedef struct {
    int type;          
    char *data;        
} Operation;

char S[MAX_LEN + 1];   
int length = 0;        
Operation history[MAX_OPS];  
int top = -1;          

void push(int type, char *data) {
    history[++top].type = type;
    history[top].data = data ? strdup(data) : NULL;
}

Operation pop() {
    return history[top--];
}

int main() {
    int Q;
    scanf("%d", &Q);

    for (int i = 0; i < Q; i++) {
        int type;
        scanf("%d", &type);

        if (type == 1) { 
            char W[1000001];
            scanf("%s", W);
            int wlen = strlen(W);

            push(1, W);

            strcpy(S + length, W);
            length += wlen;
        }
        else if (type == 2) { 
            int k;
            scanf("%d", &k);

            char *deleted = (char *)malloc((k + 1) * sizeof(char));
            strncpy(deleted, S + length - k, k);
            deleted[k] = '\0';
            push(2, deleted);

            length -= k;
            S[length] = '\0';
        }
        else if (type == 3) { 
            int k;
            scanf("%d", &k);
            printf("%c\n", S[k - 1]);
        }
        else if (type == 4) { 
            Operation last = pop();

            if (last.type == 1) { 
                int wlen = strlen(last.data);
                length -= wlen;
                S[length] = '\0';
            }
            else if (last.type == 2) { 
                int dlen = strlen(last.data);
                strcpy(S + length, last.data);
                length += dlen;
            }

            free(last.data);
        }
    }
    return 0;
}
