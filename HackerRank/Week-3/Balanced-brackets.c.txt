#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX 1000

char stack[MAX];
int top = -1;

void push(char c) {
    stack[++top] = c;
}

char pop() {
    if (top == -1) return '\0';
    return stack[top--];
}

char peek() {
    if (top == -1) return '\0';
    return stack[top];
}

int isMatchingPair(char open, char close) {
    return (open == '(' && close == ')') ||
           (open == '[' && close == ']') ||
           (open == '{' && close == '}');
}

char* isBalanced(char* s) {
    top = -1;  
    for (int i = 0; s[i] != '\0'; i++) {
        char c = s[i];
        if (c == '(' || c == '[' || c == '{') {
            push(c);
        } else if (c == ')' || c == ']' || c == '}') {
            char last = pop();
            if (!isMatchingPair(last, c)) {
                return "NO";
            }
        }
    }
    return (top == -1) ? "YES" : "NO";
}

int main() {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        char s[MAX];
        scanf("%s", s);
        printf("%s\n", isBalanced(s));
    }
    return 0;
}
